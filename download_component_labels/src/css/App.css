.App {
  display: flex;
  flex-direction: row;
}

.rightside {
  padding: 1rem;
  width: 30%;
  background-color: var(--secondary-background-color);
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

.leftside {
  width: 70%;
}

select {
  background-color: transparent;
  height: 40px;
  width: 100%;
  border: none;
  border-bottom: 1px solid;
  border-color: var(--secondary-color);
  color: var(--secondary-color);
}

.container {
  overflow: auto;
  display: flex;
  flex-direction: column;
  align-items: stretch;
  flex-grow: 1;
}

.container.preview {
  overflow: auto;
  line-height: 1.5rem;
  min-height: 8.3rem;
  min-width: 200px;
  padding: 10px;
  padding-top: 0;
  padding-bottom: 0;
  margin: 10px;
  background-color: var(--shade-color);
  border-radius: 0.5rem;
}

pre {
  color: var(--accent-color);
}

.container.button {
  align-items: center;
  justify-content: center;
}

.row.item.big.select:hover {
  filter: brightness(150%);
}

button.download {
  background-color: var(--accent-color);
  cursor: pointer;
  border: none;
  color: var(--button-text-color);
  padding: .5rem 1.2rem;
  padding: .5rem .8rem;
  font-size: var(--h3-font-size);
  display: flex;
  align-items: center;
  border-radius: .3rem;
}

button.download:hover {
  /* Darker background on mouse-over */
  background-color: var(--accent-color-light);
}

div.stack {
  position: absolute;
  top: 1rem;
  right: 1rem;
}

div.stack:hover {
  filter: brightness(150%);
}

/* VV since default color was cahnged in *{}, I had to specifically change these back to their intended colors VV */
/* Close icon */
path[d="M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"] {
  color: var(--secondary-color);
}

path[d="M5 20h14v-2H5zM19 9h-4V3H9v6H5l7 7z"] {
  color: var(--button-text-color);
}

/* override css for;  MUI DownloadIcon*/
/* .MuiSvgIcon-root {
  fill: var(--button-text-color) !important;
  font-size: 1.27rem !important;
  padding: 0rem .75rem 0.15rem 0rem !important;
} */





/* ____________________________CHECKBOX LAND _______________________________ */


/* HEADER */

.row.item.small {
  padding: 0rem;
  width: 20%;
}

.row.header {
  padding: 0;
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 1rem;
}




/* PARENT */

.row {
  padding: 1rem;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  /* column-gap: 3rem;
  row-gap: 3rem;
  columns:2 ; */
  
}


.row.item.big {
  width: 50%;
  padding: 0rem;
  /* overflow: visible; */
  /* flex-direction: column;
  columns: 2; */
}
.container.checkbox-list {

  /* display: flex; */
  /* overflow: visible; */
  /* column-gap: 40px; */
  /* flex-direction: row; */


  /* flex-wrap: wrap; */
  /* justify-content: flex-end; */
  /* padding-top: 1rem; */

  padding-bottom: 1rem;
  border-bottom: 1px solid;
  column-gap: 2rem;
}
.row.checkbox {
  /* flex-direction: column; */
  /* columns: 2; */
  /* margin-left: 1rem; */
  /* overflow: visible; */
  /* display: flex; */
  /* flex-direction: row-reverse; */
  /* row-gap: 1rem; */
  /* column-gap: .5rem; */
  /* row-gap: 3rem; */
  /* margin-left: .1rem; */
  /* margin-right: .3rem; */
  
  column-gap: 1rem;
  padding-left: 1rem;  
  padding: 0;
  width: 35%;
  justify-content: flex-start;
  align-items: center;

  }

input[type="checkbox"] {
  accent-color: var(--accent-color-dark);

}

/* CHILD */



